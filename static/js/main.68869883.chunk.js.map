{"version":3,"sources":["Components/contactForm/contactForm.module.css","Components/contactList/contactList.module.css","Components/filter/filter.module.css","redux/contacts/contactsSelectors.jsx","redux/contacts/contactsAction.jsx","redux/contacts/contactsOperations.jsx","Components/contactForm/ContactForm.jsx","Components/contactList/ContactList.jsx","Components/filter/Filter.jsx","Components/App.js","redux/contacts/contactsReducer.jsx","redux/rootReducer.jsx","redux/store.js","index.js"],"names":["module","exports","getContacts","state","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","contacts","normalizedFilter","toLowerCase","contact","name","includes","contactsActions","addContactRequest","createAction","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","getContactRequest","getContactSuccess","getContactError","changeFilter","payload","axios","defaults","baseURL","ContactForm","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","find","alert","onSubmit","this","className","styles","form","htmlFor","label","onChange","placeholder","type","pattern","title","required","button","Component","connect","dispatch","a","post","data","id","message","addContact","onDeleteContact","delete","deleteContact","list","map","item","info","onClick","event","target","App","getFetchContacts","isLoading","isError","mapDispatchToProps","get","Object","keys","key","console","log","createReducer","_","action","setError","refreshError","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68869883.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"contactForm_form__3u38v\",\"label\":\"contactForm_label__3JmAI\",\"button\":\"contactForm_button__elSmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"contactList_list__Vbj7w\",\"item\":\"contactList_item__3c6BA\",\"button\":\"contactList_button__1_Zez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"filter_label__J3EHs\"};","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContacts = (state) => state.items;\r\nexport const getFilter = (state) => state.filter;\r\nexport const getAllContacts = (state) => state.items;\r\nexport const getLoading = (state) => state.loading;\r\nexport const getError = (state) => state.error;\r\n\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);","import { createAction } from \"@reduxjs/toolkit\";\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst addContactRequest = createAction(\"contacts/addContactRequest\");\r\nconst addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nconst addContactError = createAction(\"contacts/addContactError\");\r\n\r\nconst deleteContactRequest = createAction(\"contacts/deleteContactRequest\");\r\nconst deleteContactSuccess = createAction(\"contacts/deleteContactSuccess\");\r\nconst deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\n \r\nconst getContactRequest = createAction(\"contacts/getContactRequest\");\r\nconst getContactSuccess = createAction(\"contacts/getContactSuccess\");\r\nconst getContactError = createAction(\"contacts/getContactError\");\r\n\r\n  \r\n  const changeFilter = createAction('contacts/changeFilter', (filter) => {\r\n    return {\r\n      payload: filter,\r\n    };\r\n  });\r\n\r\n  \r\n\r\n  const contactsActions = {\r\n    addContactRequest, addContactSuccess, addContactError, deleteContactRequest, deleteContactSuccess, deleteContactError, getContactRequest, getContactSuccess, getContactError, changeFilter, \r\n  }\r\n  \r\n  export default  contactsActions ;","import axios from \"axios\";\r\nimport contactsActions from \"./contactsAction\";\r\n\r\naxios.defaults.baseURL = \"https://shop-31f43-default-rtdb.firebaseio.com/\";\r\n\r\nexport const addContact = contact => async dispatch => {\r\n    dispatch(contactsActions.addContactRequest());\r\n    // console.log(contact);\r\n    try {\r\n      const { data } = await axios.post('/contacts.json', contact);\r\n      dispatch(contactsActions.addContactSuccess({ id: data.name, ...contact }));\r\n    } catch (error) {\r\n        // console.log(error);\r\n      dispatch(contactsActions.addContactError(error.message));\r\n    }\r\n    \r\n    // const contact = {\r\n    //     name,\r\n    //     number,\r\n    //   };\r\n    //   dispatch(contactsActions.addContactRequest());\r\n      \r\n    //   axios \r\n    //      .post(\"/contacts\", contact)\r\n    //      .then(({ data }) => dispatch(contactsActions.addContactSuccess(data)))\r\n    //      .catch((error) => dispatch(contactsActions.addContactError(error)));\r\n    };\r\n\r\nexport const deleteContact = (id) => async dispatch => {\r\n    dispatch(contactsActions.deleteContactRequest());\r\n    try {\r\n        await axios.delete(`/contacts/${id}.json`);\r\n        dispatch(contactsActions.deleteContactSuccess(id));\r\n      } catch (error) {\r\n        dispatch(contactsActions.deleteContactError(error.message));\r\n      }\r\n    // axios\r\n    //    .delete(`/contacts/${id}`)\r\n    //    .then(() => dispatch(contactsActions.deleteContactSuccess(id)))\r\n    //    .catch((error) => dispatch(contactsActions.deleteContactError(error)));\r\n    };\r\n\r\n    export const getFetchContacts = () => async dispatch => {\r\n    dispatch(contactsActions.getContactRequest());\r\n    try {\r\n        const {data } = await axios\r\n        .get(\"/contacts.json\");\r\n        if (data)\r\n        dispatch(\r\n            contactsActions.getContactSuccess(\r\n            Object.keys(data).map(key => ({\r\n              id: key,\r\n              ...data[key],\r\n            })),\r\n          ),\r\n        );\r\n    } catch (error) {\r\n        console.log(error);\r\n      dispatch(contactsActions.getContactError(error.message));\r\n    }\r\n        \r\n    };\r\n    \r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./contactForm.module.css\";\r\nimport { connect } from 'react-redux';\r\nimport { getContacts } from '../../redux/contacts/contactsSelectors';\r\nimport { addContact } from '../../redux/contacts/contactsOperations';\r\n\r\nclass ContactForm extends Component {\r\n    state = { \r\n        name: '',\r\n        number: '',\r\n     }\r\n\r\n     handleChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n    \r\n        this.setState({ [name]: value });\r\n      };\r\n\r\n     handleSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const { name, number } = this.state;\r\n        const { contacts } = this.props;\r\n        const existContacts = contacts.find(\r\n          contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n        );\r\n\r\n        if (existContacts) {\r\n          return alert(`Contact \"${name}\" already exists`);\r\n        }\r\n        this.props.onSubmit({ name, number });\r\n    \r\n        this.setState({ name: '', number: '' });\r\n      };\r\n\r\n    render() {\r\n        const {name, number} = this.state;\r\n        return (\r\n            <form className={styles.form} onSubmit={this.handleSubmit} >\r\n            <label htmlFor=\"name\" className={styles.label}>\r\n            <input\r\n             value={name}\r\n             onChange={this.handleChange}\r\n             placeholder=\"Имя Фамилия\"\r\n             type=\"text\"\r\n             name=\"name\"\r\n             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n             title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n             required\r\n/>\r\n            </label>\r\n            <label htmlFor=\"number\" className={styles.label}>\r\n            <input\r\n             value={number}\r\n             onChange={this.handleChange}\r\n             placeholder=\"111-11-11\"\r\n             type=\"tel\"\r\n             name=\"number\"\r\n             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n             title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n             required\r\n/>\r\n            </label>\r\n            <button className={styles.button} type=\"submit\" >Add contact</button>\r\n        </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (contact) =>\r\n  dispatch(addContact(contact)),\r\n});\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactForm);","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contactsOperations\";\r\nimport { getVisibleContacts } from \"../../redux/contacts/contactsSelectors\";\r\nimport styles from './contactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={styles.item} key={id}>\r\n            <p className={styles.info}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={styles.button}\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}>\r\n                  Delete\r\n              </button>\r\n        \r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n}\r\n\r\n// const getFilterContacts = (allContacts, filter) => {\r\n  \r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   // console.log(allContacts);\r\n//   return allContacts.filter(contact => \r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nconst mapstateToProps = state => {\r\n  return {\r\n    contacts: getVisibleContacts(state),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n})\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ContactList);\r\n\r\n// const mapStateToProps = (state) => {\r\n//   const { filter, contacts } = state.contacts;\r\n//   const filteredContacts = onFilterRender(contacts, filter);\r\n\r\n//   return { contacts: filteredContacts };\r\n// };","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport contactsActions from \"../../redux/contacts/contactsAction\";\r\nimport { getFilter } from \"../../redux/contacts/contactsSelectors\";\r\nimport styles from \"./filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange }) => (\r\n  <label className={styles.label}>\r\n    Find contacts by name\r\n    <input\r\n      type=\"text\"\r\n      name=\"name\"\r\n      value={filter}\r\n      onChange={onChange}\r\n    ></input>\r\n  </label>\r\n);\r\n\r\nconst mapstateToProps = state => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Filter);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport ContactList from './contactList/ContactList';\r\nimport Filter from './filter/Filter';\r\nimport { getFetchContacts } from '../redux/contacts/contactsOperations';\r\nimport {\r\n    getContacts,\r\n    getLoading,\r\n    getError,\r\n  } from \"../redux/contacts/contactsSelectors\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        contacts: [],\r\n        items: [],\r\n        filter: ''\r\n\r\n      }\r\n\r\n      componentDidMount() {\r\n          this.props.getFetchContacts();\r\n      }\r\n\r\n    //   componentDidMount() {\r\n    //       const newContact = localStorage.getItem('contacts');\r\n\r\n    //       if (newContact) {\r\n    //           this.props.storageContact(JSON.parse(newContact));\r\n    //       }\r\n    //   }\r\n\r\n    //   componentDidUpdate(prevProps, prevState) {\r\n    //       const { contacts} = this.props;\r\n\r\n    //       if (prevProps.contacts !== contacts) {\r\n    //           localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    //       }\r\n    //   }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Phonebook</h1>\r\n                <ContactForm/>\r\n                <h2>Contacts</h2>\r\n                <Filter/>\r\n                <ContactList />\r\n                {this.props.isLoading && <h2>Loading...</h2> }\r\n                {this.props.isError && <h2>Error</h2> }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapstateToProps = state => ({\r\n    contacts: getContacts(state),\r\n    isLoading: getLoading(state),\r\n    isError: getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getFetchContacts: getFetchContacts,\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(App);","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport contactsActions from './contactsAction';\r\n\r\nconst items = createReducer([], {\r\n  [contactsActions.getContactSuccess]: (_, action) => action.payload,\r\n  [contactsActions.addContactSuccess]: (state, action) => [action.payload, ...state],\r\n  [contactsActions.deleteContactSuccess]: (state, action) =>\r\n    state.filter(({ id }) => id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n    [contactsActions.changeFilter]: (_, action) => action.payload,\r\n  });\r\n\r\nconst loading = createReducer(false, {\r\n    [contactsActions.addContactRequest]: () => true,\r\n    [contactsActions.addContactSuccess]: () => false,\r\n    [contactsActions.addContactError]: () => false,\r\n    [contactsActions.deleteContactRequest]: () => true,\r\n    [contactsActions.deleteContactSuccess]: () => false,\r\n    [contactsActions.deleteContactError]: () => false,\r\n    [contactsActions.getContactRequest]: () => true,\r\n    [contactsActions.getContactSuccess]: () => false,\r\n    [contactsActions.getContactError]: () => false,\r\n  });\r\n\r\nconst setError = (_, { payload }) => payload;\r\n\r\nconst refreshError = () => null;\r\n\r\nconst error = createReducer(null, {\r\n  [contactsActions.addContactRequest]: refreshError,\r\n  [contactsActions.addContactError]: setError,\r\n  [contactsActions.deleteContactRequest]: refreshError,\r\n  [contactsActions.deleteContactError]: setError,\r\n  [contactsActions.getContactRequest]: refreshError,\r\n  [contactsActions.getContactError]: setError,\r\n});\r\n  \r\n  export default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n    error,\r\n  });","import contactsReducer from \"./contacts/contactsReducer\";\r\n\r\n\r\nconst rootReducer = contactsReducer;\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./Components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./index.css\";\r\nimport store from \"./redux/store\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>\r\n   </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}